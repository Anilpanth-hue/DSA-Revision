#include<iostream>
using namespace std;

 /*

int& function(int a){
    int num = a;
    int& ans = num;
    return ans;
}

void update2(int& n){
    // here giving the reference (&), That is known as Pass by reference
    n++; 
}

void update1(int n){
    // here normally passing the value, That is Known as Pass by value
    n++; 
}

int main(){
   
    int i =5;

    // creating a reference variable
    int &j = i;

    cout<< i << endl;

    i++;

    cout << i << endl; 

    j++;

    cout << i << endl; 

    cout << j << endl; 

    int n = 5;
    cout << "Before update " << n << endl;
    update2(n);
    cout<<" After Update " << n << endl;

    function(n);
    */ 


   // Using dynamic memory allocation, we can make an input user array 

// int getsum(int *arr, int n){
//     int sum = 0;
//     for(int i=0; i<n; i++){
//         sum += arr[i];
//     }
//     return sum;
// }

//    int main(){

//     int n;
//     cin>> n;

//     // variable size array
//     int* arr = new int[n]; // this is dynamic state using
    
//     // taking input in array
//     for(int i=0; i<n; i++){
//         cin>> arr[i];
//     }

//     int ans = getsum(arr, n);
//     cout<< ans << endl;

    int main(){

        // used to crash any program
    while(true){
        int* p = new int;
    }



    return 0;
}
